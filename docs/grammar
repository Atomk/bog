root <- (NL stmt)* NL? EOF

stmt
   <- if
    / while
    / for
    / match
    / let
    / expr
    / assign
    / "return" expr
    / "break"
    / "continue"

if <- "if" bool_expr block ("else" "if" bool_expr block)* ("else" block)?

while <- "while" bool_expr block

for <- "for" unwrap "in" bit_expr ("..." bit_expr) block

block <- (NL INDENT stmt)+ NL

match <- "match" bool_expr (INDENT match_case)+

match_case
   <- unwrap block
    / (bool_expr ("..." bool_expr) ",")+ block

let <- "let" (unwrap_no_ident / (IDENTIFIER member)) "=" expr

assign
   <- IDENTIFIER member "=" expr
    / IDENTIFIER member ("+=" / "-=" / "*=" / "/=" / "//=" / "%=" / "<<=" / ">>=" / "&=" / "|=" / "^=") bit_expr

member <- (("[" STRING "]") / ("." IDENTIFIER))*

unwrap
   <- IDENTIFIER
    / unwrap_no_ident

unwrap_no_ident
   <- "{" (IDENTIFIER / STRING) ":" unwrap ("," (IDENTIFIER / STRING) ":" unwrap)* "}"
    / "(" ("..." ",")?  unwrap ("," unwrap)* ("," "...")? ")"
    / "[" ("..." ",")?  unwrap ("," unwrap)* ("," "...")? "]"
    / "error" IDENTIFIER

expr <- (fn / import / bool_expr)

fn <- "|" (unwrap ",")* "|" (block / bool_expr)

import <- "import" STRING

bool_expr <- bit_expr (("or" bit_expr)* / ("and" bit_expr)*)

bit_expr <- equality_expr (("&" equality_expr)* / ("|" equality_expr)* / ("|" equality_expr)*) / ("catch" unwrap (expr / block))

equality_expr <- comparision_expr (("==" / "!=") comparision_expr)*

comparision_expr <- shift_expr (("<" / "<=" / ">" / ">=" / "in") shift_expr)*

shift_expr <- add_expr (("<<" / ">>") add_expr)

add_expr <- mul_expr (("-" / "+") mul_expr)*

mul_expr <- prefix_expr (("*" / "/" / "//" / "%") prefix_expr)*

prefix_expr <- ("-" / "+" / "not" / "~" / "try") primary_expr suffix_expr*

suffix_expr
   <- "[" expr "]"
    / "(" (expr ",")* ")"
    / "." IDENTIFIER

primary_expr
   <- IDENTIFIER
    / STRING
    / NUMBER
    / "true" / "false"
    / "(" (expr ",")* ")"
    / "{" ((IDENTIFIER / STRING) ":" expr ",")* "}"
    / "[" (expr ",")* "]"
    / "error" primary_expr

